openapi: 3.0.0
info:
  version: 1.0.0
  title: Gorilla Farm Api
  description: |
    ゴリラを放牧している牧場のAPI

    ゴリラの飼育情報や飼育者の情報を取得したり更新する

tags:
  - name: Gorilla
    description: ゴリラに関連する情報を扱う
  - name: Staff
    description: 牧場スタッフに関連する情報を扱う
paths:
  /v1/gorillas:
    get:
      tags:
        - Gorilla
      description: >
        飼育しているゴリラの一覧を取得する
      parameters:
        - name: page
          in: query
          description: |
            取得したいページの位置を設定する
          schema:
            type: number
            minimum: 1
          required: true

        - name: pageSize
          in: query
          description: |
            取得したいレコードの数を設定する 
          schema:
            type: number
            minimum: 1
          required: true
      responses:
        '200':
          description: 取得
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gorilla'
    post:
      tags:
      - Gorilla
      description: >
        新規にゴリラを登録する
      requestBody:
        description: 新規にゴリラを登録する
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "name"
                - "animal_type"
              properties:
                name:
                  $ref: '#/components/schemas/Gorilla/properties/name'
                animal_type:
                  $ref: '#/components/schemas/Gorilla/properties/animal_type'
                weight:
                  $ref: '#/components/schemas/Gorilla/properties/weight'
                height:
                  $ref: '#/components/schemas/Gorilla/properties/height'
      responses:
        '201':
          description: 登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gorilla'
  /v1/gorillas/{gorilla_id}:
    put:
      tags:
      - Gorilla
      description: >
        ゴリラの情報を更新する
      parameters:
        - name: gorilla_id
          in: path
          description: 更新するゴリラのID
          required: true
          schema:
            type: number
      requestBody:
        description: ゴリラを更新する
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  $ref: '#/components/schemas/Gorilla/properties/name'
                animal_type:
                  $ref: '#/components/schemas/Gorilla/properties/animal_type'
                weight:
                  $ref: '#/components/schemas/Gorilla/properties/weight'
                height:
                  $ref: '#/components/schemas/Gorilla/properties/height'
      responses:
        '200':
          description: 更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gorilla'
    delete:
      tags:
      - Gorilla
      description: >
        ゴリラの情報を削除する
      parameters:
        - name: gorilla_id
          in: path
          description: 削除するゴリラのID
          required: true
          schema:
            type: number
      responses:
        '204':
          description: 削除

  /v1/staffs:
    post:
      tags:
        - Staff
      summary: 牧場スタッフを新規追加する
      description: 牧場システムにログインするユーザーを登録する
      requestBody:
        description: ユーザーを新規追加する
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/xml:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '201':
          description: 登録
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
            application/xml:
              schema:
                $ref: '#/components/schemas/Staff'
  /v1/staffs/{staff_id}:
    put:
      tags:
        - Staff
      summary: 牧場スタッフを更新する
      parameters:
        - name: staff_id
          in: path
          description: 更新するスタッフのID
          required: true
          schema:
            type: number
      requestBody:
        description: Update an existent staff in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
       '200':
          description: 更新
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
    delete:
      tags:
        - Staff
      summary: 牧場スタッフを削除する
      parameters:
        - name: staff_id
          in: path
          description: 削除するスタッフのID
          required: true
          schema:
            type: number
      responses:
        '204':
          description: 削除
  /v1/staffs/{staff_id}/gorilla_in_charge:
    put:
      tags:
        - Staff
      summary: 担当するゴリラ情報の保存
      description: 担当するゴリラを追加・更新する
      parameters:
        - name: staff_id
          in: path
          description: 担当するゴリラを追加するスタッフのID
          required: true
          schema:
            type: number
      requestBody:
        description: 担当するゴリラを追加・更新する
        content:
          application/json:
            schema:
              type: object
              properties:
                gorilla_ids:
                  type: array
                  items:
                    type: number
      responses:
        '200':
          description: データがあれば更新、なければ登録

components:
  schemas:
    Gorilla:
      type: "object"
      required:
        - "name"
        - "animal_type"
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 100
        name:
          type: "string"
          description: "ゴリラの名前"
          example: "太郎"
        animal_type:
          type: "string"
          description: "ゴリラの種別"
          enum:
            - "WesternLowlandGorilla"
            - "CrossRiverGorilla"
            - "MountainGorilla"
            - "EasternLowlandGorilla"
        weight:
          type: "integer"
          format: "int64"
          example: 100
        height:
          type: "integer"
          format: "int64"
          example: 200
    Staff:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
        type:
          type: "string"
          enum:
            - bad_request
            - unauthorized_token
            - forbidden
            - not_found
            - internal_server_error
            - too_many_requests
            - plan_limit_exceeded
            - non_deletable_resource
            - service_maintenance
        message:
          type: "string"
          description: エラーの原因
